========================
Request Format: XML-RPC
========================

XML-RPC is Easy
===============

The XML-RPC interface uses... well... xml-rpc.
You'll be using a library, surely.
The endpoint is ``http://api.jaiku.com/xmlrpc``

All parameters should be sent as a dictionary, which means one big argument that
is a list of key-value pairs rather than positional arguments (this makes it
easier to deal with defaults)

An example actor_get_ call (from python)::

  import xmlrpclib
  from oauth import oauth
  consumer = oauth.OAuthConsumer('consumer key', 'consumer secret')
  access_token = oauth.OAuthToken('access token key', 'access token secret')
  xmlrpc_url = 'http://api.jaiku.com/xmlrpc'
  request = oauth.OAuthRequest.from_consumer_and_token(
      oauth_consumer=consumer,
      token=access_token,
      http_url=xmlrpc_url,
      http_method='POST')
  request.sign_request(
      oauth.OAuthSignatureMethod_HMAC_SHA1(),
      consumer,
      access_token)
  params = dict(request.parameters)
  params['nick'] = 'jaiku'
  server = xmlrpclib.ServerProxy(xmlrpc_url)
  rv = server.actor_get(params)
  print rv

And the expected result should look like::

  {'actor': {'avatar_updated_at': '2009-01-01 00:00:00',
	     'extra': {'follower_count': 81397, 
	               'family_name': 'Team', 
                       'given_name': 'Jaiku', 
                       'contact_count': 52, 
                       'icon': 'jaiku@jaiku.com/avatar_15'}, 
             'privacy': 3, 
  	     'nick': 'jaiku@jaiku.com',
	     'deleted_at': None, 
             'type': 'user'}}

To find out more about the OAuth_ consumer and access token, check out
`Authentimacatoritization`_

About legacy authentication support... 
======================================

The XML-RPC interface also works with `legacy credentials`_.
You need to replace the OAuth parameters the following variables::

  user           # user's nick
  personal_key   # generated by the legacy authentication system

.. _actor_get: /api/docs/method_actor_get
.. _oauth: http://oauth.googlecode.com/svn/spec/core/1.0/oauth-core-1_0.html
.. _authentimacatoritization: /api/docs/authentication
.. _legacy credentials : http://devku.appspot.com/docs
